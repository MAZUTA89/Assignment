<ResourceDictionary xmlns="http://schemas.microsoft.com/winfx/2006/xaml/presentation"
                    xmlns:x="http://schemas.microsoft.com/winfx/2006/xaml">





    <!-- Цветовая палитра (можно изменить) -->
    <Color x:Key="PrimaryColor">#FF0066B3</Color>
    <SolidColorBrush x:Key="DarkBrush" Color="#FF004080"/>
    <Color x:Key="LightColor">#FFE6F2FF</Color>

    <!-- Стиль для Grid (фон окна) -->
    <Style TargetType="Grid" x:Key="MainGridStyle">
        <Setter Property="Background">
            <Setter.Value>
                <LinearGradientBrush StartPoint="0,0" EndPoint="1,1">
                    <GradientStop Color="{StaticResource LightColor}" Offset="0"/>
                    <GradientStop Color="White" Offset="0.5"/>
                </LinearGradientBrush>
            </Setter.Value>
        </Setter>
    </Style>

    <Style TargetType="TextBlock" x:Key="TextBlockControl" BasedOn="{StaticResource {x:Type TextBlock}}">
        <Setter Property="Foreground" Value="{StaticResource DarkBrush}"/>
        <Setter Property="FontWeight" Value="SemiBold"/>
        <Setter Property="Margin" Value="5,8"/>
        <Setter Property="FontSize" Value="14"/>
    </Style>



    <!-- Стиль для всех контролов -->
    <Style TargetType="Control" x:Key="ControlStyle">
        <Setter Property="Foreground" Value="{StaticResource DarkBrush}"/>
        <Setter Property="FontWeight" Value="SemiBold"/>
        <Setter Property="FontFamily" Value="Roboto"></Setter>
        <Setter Property="Margin" Value="5,8"/>
        <Setter Property="FontSize" Value="14"/>
        <Setter Property="BorderThickness" Value="1"/>
        <Setter Property="Padding" Value="8,4"/>
        <Setter Property="SnapsToDevicePixels" Value="True"/>
        <Setter Property="FocusVisualStyle" Value="{x:Null}"/>
    </Style>

    <!-- Специальный стиль для кнопки -->
    <Style TargetType="Button" x:Key="FunctionalButton">
        <Setter Property="Background" Value="#61AFAA"/>
        <Setter Property="Foreground" Value="White"/>
        <Setter Property="BorderThickness" Value="0"/>
        <Setter Property="Padding" Value="15,5"/>
        <Setter Property="FontWeight" Value="SemiBold"/>
        <Setter Property="Cursor" Value="Hand"/>
        <Setter Property="Margin" Value="7, 0, 7, 0"/>
        <Setter Property="Effect">
            <Setter.Value>
                <DropShadowEffect BlurRadius="20" ShadowDepth="2" Color="{StaticResource PrimaryColor}" Opacity="0.3"/>
            </Setter.Value>
        </Setter>
        <Style.Triggers>
            <Trigger Property="IsMouseOver" Value="True">
                <Setter Property="Background" Value="#2B2A29"/>
            </Trigger>
        </Style.Triggers>
    </Style>
    <Style TargetType="Button" x:Key="DirectButton" BasedOn="{StaticResource FunctionalButton}">
        <Setter Property="Background" Value="White"/>
        <Setter Property="Foreground" Value="#61AFAA"/>
    </Style>

    <Style TargetType="MenuItem" x:Key="FunctionalMenuItem">
        <Setter Property="Background" Value="#61AFAA"/>
        <Setter Property="Foreground" Value="White"/>
        <Setter Property="BorderThickness" Value="0"/>
        <Setter Property="Padding" Value="15,5"/>
        <Setter Property="FontWeight" Value="SemiBold"/>
        <Setter Property="Cursor" Value="Hand"/>
        <Style.Triggers>
            <Trigger Property="IsMouseOver" Value="True">
                <Setter Property="Background" Value="#2B2A29"/>
            </Trigger>
        </Style.Triggers>
    </Style>

    <Style TargetType="MenuItem" x:Key="DirectionMenuItem" BasedOn="{StaticResource FunctionalMenuItem}">
        <Setter Property="Background" Value="White"/>
        <Setter Property="Foreground" Value="#61AFAA"/>
    </Style>
    <Style TargetType="Button" x:Key="FunctionalButtonMenuItem">
        <Setter Property="Background" Value="#61AFAA"/>
        <Setter Property="Foreground" Value="White"/>
        <Setter Property="Padding" Value="15,5"/>
        <Setter Property="FontWeight" Value="Bold"/>
        <Setter Property="Cursor" Value="Hand"/>
        <Setter Property="BorderBrush" Value="White"></Setter>
        <Style.Triggers>
            <Trigger Property="IsMouseOver" Value="True">
                <Setter Property="Background" Value="#2B2A29"/>
            </Trigger>
        </Style.Triggers>
    </Style>

    <Style TargetType="Button" x:Key="DirectionalButtonMenuItem" BasedOn="{StaticResource FunctionalButtonMenuItem}">
        <Setter Property="Background" Value="White"/>
        <Setter Property="Foreground" Value="#61AFAA"/>

    </Style>




    <!-- Стиль для ComboBox -->
    <Style TargetType="ComboBox" x:Key="ModernComboBox" BasedOn="{StaticResource ControlStyle}">
        <Setter Property="Background" Value="#F5F5F5"/>
        <!-- Светло-серый -->
        <Setter Property="Foreground" Value="#333333"/>
        <!-- Темный текст -->
        <Setter Property="BorderBrush" Value="#CCCCCC"/>
        <Setter Property="BorderThickness" Value="1"/>
        <Setter Property="Height" Value="28"/>
    </Style>

    <!-- Стиль для CheckBox -->
    <Style TargetType="CheckBox">
        <Setter Property="Foreground" Value="#2B2A29"/>
        <Setter Property="FontWeight" Value="SemiBold"/>
    </Style>




    <!--Старый-->
    <Style TargetType="Control" x:Key="BaseControlStyle">
        <Setter Property="Margin" Value="3"></Setter>
        <Setter Property="FontSize" Value="16"></Setter>
        <Setter Property="FontFamily" Value="Roboto"></Setter>
        <Setter Property="SnapsToDevicePixels" Value="True"></Setter>
        <Setter Property="Foreground" Value = "#2B2A29"></Setter>
    </Style>



    <Style TargetType="TextBox" x:Key="AssignmentTextBox" BasedOn="{StaticResource BaseControlStyle}">
        <Setter Property="AcceptsTab" Value="True"/>
        <Setter Property="AcceptsReturn" Value="True"/>
        <Setter Property="AutoWordSelection" Value="True"/>
        <Setter Property="TextWrapping" Value="Wrap"/>
        <Setter Property="RenderTransformOrigin" Value="0.5,0.5"/>
        <Setter Property="BorderThickness" Value="1"/>

        <!-- Добавляем трансформацию для анимации масштаба -->
        <Setter Property="RenderTransform">
            <Setter.Value>
                <ScaleTransform ScaleX="1" ScaleY="1"/>
            </Setter.Value>
        </Setter>

        <!-- Добавляем Transition для плавности -->
        <Setter Property="Template">
            <Setter.Value>
                <ControlTemplate TargetType="TextBox">
                    <Border x:Name="border" 
                        Background="{TemplateBinding Background}"
                        BorderBrush="{TemplateBinding BorderBrush}"
                        BorderThickness="{TemplateBinding BorderThickness}"
                        CornerRadius="2"
                        SnapsToDevicePixels="True">
                        <ScrollViewer x:Name="PART_ContentHost"/>
                    </Border>
                    <ControlTemplate.Triggers>
                        <Trigger Property="IsMouseOver" Value="True">
                            <Setter Property="BorderBrush" Value="#2B2A29"/>
                            <Setter TargetName="border" Property="BorderThickness" Value="2"/>
                        </Trigger>
                    </ControlTemplate.Triggers>
                </ControlTemplate>
            </Setter.Value>
        </Setter>

        <Style.Triggers>
            <!-- Триггер для наведения с анимацией -->
            <Trigger Property="IsMouseOver" Value="True">
                <Setter Property="Background" Value="#F0F8FF"/>
                <Setter Property="BorderBrush" Value="#FF61AFAA"/>

                <!-- Модифицированные анимации -->
                <Trigger.EnterActions>
                    <BeginStoryboard>
                        <Storyboard>
                            <DoubleAnimationUsingKeyFrames 
                        Storyboard.TargetProperty="RenderTransform.ScaleX">
                                <DiscreteDoubleKeyFrame KeyTime="0:0:0" Value="1"/>
                                <SplineDoubleKeyFrame KeyTime="0:0:0.2" Value="1.02"/>
                            </DoubleAnimationUsingKeyFrames>
                            <DoubleAnimationUsingKeyFrames 
                        Storyboard.TargetProperty="RenderTransform.ScaleY">
                                <DiscreteDoubleKeyFrame KeyTime="0:0:0" Value="1"/>
                                <SplineDoubleKeyFrame KeyTime="0:0:0.2" Value="1.02"/>
                            </DoubleAnimationUsingKeyFrames>
                        </Storyboard>
                    </BeginStoryboard>
                </Trigger.EnterActions>

                <Trigger.ExitActions>
                    <BeginStoryboard>
                        <Storyboard>
                            <DoubleAnimation Storyboard.TargetProperty="RenderTransform.ScaleX"
                                     To="1" Duration="0:0:0.2"/>
                            <DoubleAnimation Storyboard.TargetProperty="RenderTransform.ScaleY"
                                     To="1" Duration="0:0:0.2"/>
                        </Storyboard>
                    </BeginStoryboard>
                </Trigger.ExitActions>
            </Trigger>
        </Style.Triggers>
    </Style>

    <Style TargetType="TextBox" x:Key="ValidTextBox" BasedOn="{StaticResource AssignmentTextBox }">
        <Style.Triggers>
            <Trigger Property="Text" Value="">
                <Setter Property="BorderBrush" Value="Red"/>
                <Setter Property="BorderThickness" Value="2"/>
            </Trigger>
        </Style.Triggers>
    </Style>
    <Style TargetType="DatePicker" x:Key="ValidDatePicker" BasedOn="{StaticResource BaseControlStyle}">
        <Style.Triggers>
            <Trigger Property="Text" Value="">
                <Setter Property="BorderBrush" Value="Red"/>
                <Setter Property="BorderThickness" Value="2"></Setter>
            </Trigger>
        </Style.Triggers>
    </Style>
    <Style TargetType="Button" x:Key="FunctionalButtonBase" BasedOn = "{StaticResource BaseControlStyle}">
        <Setter Property="Background" Value="#FEFEFE"></Setter>
        <Setter Property="Foreground" Value = "#2B2A29"></Setter>
    </Style>
    <Style TargetType="Control" x:Key="DirectionControl" BasedOn="{StaticResource  BaseControlStyle}">
        <Setter Property="Foreground" Value="#61AFAA"></Setter>
    </Style>
    <Style TargetType="Button" x:Key="DirectionButton" BasedOn="{StaticResource  BaseControlStyle}">
        <Setter Property = "Background" Value="#FEFEFE"></Setter>
        <Setter Property = "Foreground" Value="#61AFAA"></Setter>
    </Style>
    <Style TargetType="Control" x:Key="NavigationControl">
        <Setter Property="FontSize" Value="16"></Setter>
        <Setter Property="FontFamily" Value="Roboto"></Setter>
        <Setter Property="Foreground" Value = "#2B2A29"></Setter>
    </Style>
    <Style TargetType="TextBlock" x:Key="TextBlockBTS">
        <Setter Property="Margin" Value="3"></Setter>
        <Setter Property="FontSize" Value="16"></Setter>
        <Setter Property="FontFamily" Value="Roboto"></Setter>
        <Setter Property="SnapsToDevicePixels" Value="True"></Setter>
        <Setter Property="Foreground" Value = "#2B2A29"></Setter>
    </Style>
    <Style TargetType="DataGrid" x:Key="DataGridStyle">
        <Setter Property="Margin" Value="3"></Setter>
        <Setter Property="Background" Value="White"></Setter>
    </Style>
    <Style TargetType="Control" x:Key="TextColumnHeaderStyle">
        <Setter Property="FontSize" Value="14"></Setter>
        <Setter Property="FontFamily" Value="Roboto"></Setter>
        <Setter Property="Foreground" Value="#FF004080"></Setter>
        
    </Style>
    <Style TargetType="Control" x:Key="TextColumnCellStyle">
        <Setter Property="FontSize" Value="14"></Setter>
        <Setter Property="FontFamily" Value="Roboto"></Setter>
        <Setter Property="Foreground" Value="#2B2A29"></Setter>
        <Setter Property="VerticalAlignment" Value="Center"></Setter>
    </Style>

    <Style TargetType="Control" x:Key="CargoTextColumnStyle" 
           BasedOn="{StaticResource  BaseControlStyle}">
        <Setter Property="FontSize" Value="13"></Setter>
    </Style>
    <ControlTemplate x:Key="FunctionalButtonTemplate" TargetType="{x:Type ButtonBase}">
        <Border x:Name="border" BorderBrush="{TemplateBinding BorderBrush}" CornerRadius="6"
            BorderThickness="{TemplateBinding BorderThickness}" Background="{TemplateBinding Background}" SnapsToDevicePixels="True">
            <ContentPresenter x:Name="contentPresenter" ContentTemplate="{TemplateBinding ContentTemplate}" Content="{TemplateBinding Content}" ContentStringFormat="{TemplateBinding ContentStringFormat}" Focusable="False" HorizontalAlignment="{TemplateBinding HorizontalContentAlignment}" Margin="{TemplateBinding Padding}" RecognizesAccessKey="True" SnapsToDevicePixels="{TemplateBinding SnapsToDevicePixels}" VerticalAlignment="{TemplateBinding VerticalContentAlignment}"/>
        </Border>
        <ControlTemplate.Triggers>
            <Trigger Property="Button.IsDefaulted" Value="True">
                <Setter Property="BorderBrush" TargetName="border" Value="{DynamicResource {x:Static SystemColors.HighlightBrushKey}}"/>
            </Trigger>
            <Trigger Property="IsMouseOver" Value="True">
                <Setter Property="Background" TargetName="border" Value="#FFBEE6FD"/>
                <Setter Property="BorderBrush" TargetName="border" Value="#FF3C7FB1"/>
            </Trigger>
            <Trigger Property="IsPressed" Value="True">
                <Setter Property="Background" TargetName="border" Value="#FFC4E5F6"/>
                <Setter Property="BorderBrush" TargetName="border" Value="#FF2C628B"/>
            </Trigger>
            <Trigger Property="ToggleButton.IsChecked" Value="True">
                <Setter Property="Background" TargetName="border" Value="#FFBCDDEE"/>
                <Setter Property="BorderBrush" TargetName="border" Value="#FF245A83"/>
            </Trigger>
            <Trigger Property="IsEnabled" Value="False">
                <Setter Property="Background" TargetName="border" Value="#FFF4F4F4"/>
                <Setter Property="BorderBrush" TargetName="border" Value="#FFADB2B5"/>
                <Setter Property="Foreground" Value="#FF838383"/>
            </Trigger>
        </ControlTemplate.Triggers>
    </ControlTemplate>
</ResourceDictionary>